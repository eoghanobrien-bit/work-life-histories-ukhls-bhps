
TO DO: 	COLLAPSE ACROSS JOB_CHANGE.
		ADD IN JOB INFORMATION
		SORT OUT END REASONS CODE.
		THINK ABOUT HOW I COLLAPSE ACROSS MULTIPLE SPELLS OF EMPLOYMENT WHEN SOME DATES ARE MISSING!
		ADD IN MISSING FIELD WHICH STATES WHAT STATUSES ARE IN MISSING GAP.
		ADD IN INITAL JOB START INFORMATION.
		ADD IN RETDATEY.
		ADD SEAM EFFECTS TO WAVES 16-18 OF BHPS. SEE HOW JBBGM UKHLS INFO WILL WORK WITH THIS.
		CHECK I HAVE NO PROXY INFORMATION USED WHERE I DON'T WANT IT.
		END FLAGS NOT ALWAYS CORRECT (E.G. START_MY+1)
		CHANGE WAVE+1 RULE BECAUSE DOESN'T WORK IF GAP OF 2+ WAVES.
		CHECK JOB HOURS IS CONSISTENT WITH STATUS
		ADD JOB_CHANGE TO DIFFERENT FILES.
		ADD JOB_CHANGE CATEGORY FOR LIFE HISTORY WHERE COULD ENCOMPASS MULTIPLE SPELLS.
		CHANGE JOB_CHANGE=4 IF STATUS_SPELLS>0. STATUS SPELLS ONLY MATTERS IF JOB.
		END_REAOSNS AND JOB_ATTRACTION = . IN SOME PLACES.
		CREATE VARIABLE WHICH SAYS WHICH STATUSES ARE MISSING.
		BHPS 1-15 ANNUAL HISTORY - NUMBER IMPLAUSIBLE DATES HIGH.
		prog_waveoverlap DOESN'T PUSH THROUGH WAVE. IS THIS A PROBLEM WHEN MERGING?
		prog_collapsespells DOESN'T MAKE SPELL VARIABLE PROPERLY.
		IMPUTE MONTH IN SEASON THEN HAVE GAP OPTION FOR OTHER MISSINGS.
		
// TO DO:
	// SORT OUT END REASONS AND JOB ATTRACTIONS WHERE I CAN.
	// END REASONS - USE JSTPY - GUESS MISSING DATES WHEN M==12 OR IN NEXT YEAR, FOR EXAMPLE.
	// CHECK NOT PAST INTERVIEW DATE.
	// USE JBSTAT ACROSS ALL WAVES NOT JUST 16-18.
	// FIX ROUTING DIAGRAM.
	// TRY AND MAKE CONSISTENT WITH UKHLS ANNUAL HISTORY.
	// MAKE JOB ATTRACTION AND END REASONS TIDY. FORMAT TO BE %2.0g IF NEEDS BE.
	// END FLAGS NEED SORTED, AS DOES END IND.
	// MAKE ONLY RUN IF $bhps_waves>=16
	// FIND OUT WHERE I HAD MADE THAT FIX FOR ALL THE STATUS==100s.
	// GET END_IND CORRECT.

// I SUGGEST DOING THE ONES WITH NO JOBHIST SEPARATELY. 
// THOSE THAT HAVE, DO IN STYLE OF ANNUAL HISTORY CLEAN.

by pidp Wave (Spell), sort: replace Job_Change=3 /*
	*/ if inlist(Status[_n+1],1,2) & inlist(Status,1,2) & Status!=Status[_n+1] // MAKE THIS AMENDMENT ELSEWHERE!
ALSO MAKE AMENDMENT WHERE STATUS==100 BECOMES SOMETHING ELSE IF PERSON SAYS IN SAME JOB.
COLLAPSE IF Job_Change[_n+1]=Job_Change=4

//	AMENDMENTS TO MAKE
/*
	1. SORT OUT END REASON, JOB ATTRACTION, SOURCE AND SOURCE VARIABLE
	2. CREATE PROGRAM TO MAKE JOB HOURS AND STATUS CONSISTENT
	3. LOOK AT IMPLAUSIBLE START DATE TEST - IS IT TOO RESTRICTIVE?
	4. MAKE SURE LEFTFTE_MY DOES NOT MAKE PROBLEMS WHERE IT IS FROM TWO LIFE HISTORY WAVES.
	5. MAKE SURE WAVE_OVERLAP DOESN'T CREATE PROBLEMS WHERE LEFTFTE_MY HAS BEEN USED
	6. CHANGE TO QUALIFICATION BASED BECAUSE LIFE HISTORY AGE<=23 RULE MAY BE NONSENSICAL.
		- ALTERNATIVELY, OVERWRITE AS EDUCATION WHERE AGE SPELLS LESS THAN LEFTFTE_MY AND THERE IS AN INITIAL MISSING
	7. Use cascading to my advantage rather than unnecessary loops: gen Reverse=_N-Spell to pull variables above.
	8. MERGE ACROSS WAVES WHERE CONSISTENT - DON'T CREATE SPURIOUS TRANSITIONS. USE JBBGD FOR EMPLOYED INDIVIDUALS INITIAL SPELL.
*/



GENERAL: 	LOOK AT PROG_COLLAPSESPELLS
			REMOVE REDUNDANT PROGRAMS
			ENSURE VARIABLES AND VALUES HAVE LABELS
			ENSURE FORMATTING IS CONSISTENT
			ENSURE EACH FILE HAS SAME VARIABLES
			ENSURE ORDER OF VARIABLES IS CONSISTENT
			ADD IMPUTE MONTH IN SEASON TO EACH FILE JUST IN CASE.
			CHECK NEW PROCESS WORKS ACROSS ALL FILES
			CHECK WHICH INTERVIEWS SEASON IS VALID ANSWER
			CHECK FLAGS ARE CORRECT
			ADD END REASON AND JOB ATTRACTION TO LIFE HISTORY
			ADD MORE CHECKS
			ADD START DATES TO JBSTAT==7 FOR NEW ENTRANTS IN FTE VARIABLES!!
				ADD: nemst cjsbgm cjsbgy cjsbgy4 to schoolvars global
				gen Status_M=cond(inrange(cjsbgm,1,12),cjsbgm,9)
				gen Status_Y=cjsbgy4 if inrange(cjsbgy4,1950,2010)
				gen Status_MY=ym(Status_Y,Status_M) if inrange(Wave,1,15)
				ALLOW SCHOOL if Status_MY_Age <=20 & current age isn't ridiculously early!
			INVESTIGATE HIGH NUMBER OF SWITCHES FROM FULL TIME TO PART TIME WORK WITH TRUNCATION (IS IT SAME JOB?)
			CHECK WHY HIGH NUMBER OF MISSING JOB_HOURS USING SOURCE VARIABLE PRESUMABLY.
			